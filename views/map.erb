<div class="row">
  <div class="span12">
    <%= erb :_form %>
  </div>
</div>

<div class="row">
  <div class="span8">
    <div id="map"></div>
  </div>
  <div class="span4 locations">
    <ul>
      <% @locations.each do |location| %>
        <li><strong><%= location.formatted_address %></strong>:<br/>
        &lt;geo&gt;<%= location.latitude %> <%= location.longitude %>&lt;/geo&gt;
      <% end %>
    </ul>


  </div>
</div>

<script>
$(function() {


  OpenLayers.IMAGE_RELOAD_ATTEMPTS = 3;
  OpenLayers.ImgPath = 'http://js.mapbox.com/theme/dark/';

  var SHADOW_Z_INDEX = 10;
  var MARKER_Z_INDEX = 11;

  var DIAMETER = 200;
  var proj = new OpenLayers.Projection("EPSG:4326");

  var map, layer, center, marker;

  var options = {
    controls: [
      new OpenLayers.Control.Navigation(),
      new OpenLayers.Control.PanZoomBar(),
      new OpenLayers.Control.LayerSwitcher({'ascending':false}),
      new OpenLayers.Control.Permalink(),
      new OpenLayers.Control.MousePosition(),
      new OpenLayers.Control.KeyboardDefaults(),
      new OpenLayers.Control.LayerSwitcher()
    ]
  };

  map = new OpenLayers.Map('map', options);

  var gphy = new OpenLayers.Layer.Google(
    "Google Physical",
    {type: google.maps.MapTypeId.TERRAIN}
  );
  var gmap = new OpenLayers.Layer.Google(
    "Google Streets", // the default
    {numZoomLevels: 20}
  );
  var ghyb = new OpenLayers.Layer.Google(
    "Google Hybrid",
    {type: google.maps.MapTypeId.HYBRID, numZoomLevels: 20}
  );
  var gsat = new OpenLayers.Layer.Google(
    "Google Satellite",
    {type: google.maps.MapTypeId.SATELLITE, numZoomLevels: 22}
  );


  map.addLayers([gphy]);

  var markers = new OpenLayers.Layer.Markers( "Markers" );
  map.addLayer(markers);

  var selectControl = new OpenLayers.Control.SelectFeature(this.markers, { hover: true });
  selectControl.events.register('featurehighlighted', null, onFeatureHighlighted);

   var size = new OpenLayers.Size(21,25);
   var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
   var icon = new OpenLayers.Icon('/images/marker-gold.png',size,offset);

   <% @locations.each do |location| %>
     var point = new OpenLayers.LonLat(<%= location.longitude %>, <%= location.latitude %>);
     point.transform(proj, map.getProjectionObject());
     markers.addMarker(new OpenLayers.Marker(point, icon.clone()));
  <% end %>

  var center = new OpenLayers.LonLat(-8795761.71761, 3404810.9874);

  if(!map.getCenter()) {
    map.setCenter(center, 4);
  }

  function drawLocations() {
    layer.removeFeatures(layer.features);

    var features = [];

    <% @locations.each do |location| %>
      var lonLat = new OpenLayers.LonLat(<%= location.longitude %>, <%= location.latitude %>);

      features.push(
        new OpenLayers.Feature.Vector(
          new OpenLayers.Geometry.Point(lonLat.lon, lonLat.lat)
      )
      );

    <% end %>

    layer.addFeatures(features);
  }

    function onFeatureHighlighted(evt) {
    var onPopupClose = function (evt) {
        // 'this' is the popup.
        var feature = this.feature;
        if (feature.layer) {
            selectControl.unselect(feature);
        }  
        this.destroy();
    }

    feature = evt.feature;
    popup = new OpenLayers.Popup.FramedCloud(
    "featurePopup",
    feature.geometry.getBounds().getCenterLonLat(),
    new OpenLayers.Size(100,100),
            "<h2>feature</h2>" +
            //"<h2>"+feature.attributes.station_na + "</h2>" +
            "Location: " + feature.attributes.location + '<br/>' +
            //"Elevation: " + feature.attributes.elev_,
            null, true, onPopupClose);
            feature.popup = popup;
            popup.feature = feature;
            map.addPopup(popup, true);
  }

});


</script>


